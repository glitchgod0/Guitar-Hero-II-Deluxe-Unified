name: CI

on:
  push:
  pull_request:

jobs:
  build_ps2:
    runs-on: windows-2019
    steps:
      # 1) Check out this main repo
      - uses: actions/checkout@v4

      # 2) Clone the gh2_files repo
      - name: Clone gh2_files repo
        run: |
          git clone https://github.com/Milohax-archive/gh2_files .\temp_gh2_files

      # 3) Build base ark for patchcreator
      - name: Build base ark
        run: |
          dependencies\windows\arkhelper.exe dir2ark .\temp_gh2_files\ps2 platform\ps2\GEN -n "MAIN" -s 4073741823

      # 4) Set up Python 3.11 (or other version)
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 5) Build ARK (the same commands you run locally)
      - name: Build ARK
        run: |
          pip install pillow
          pip install pycdlib
          python dependencies\python\configure_build.py ps2
          dependencies\windows\ninja.exe

      # 6) Move ark to output
      - name: Move Base ARK
        run: |
          move .\platform\ps2\GEN\MAIN_0.ARK .\out\ps2\GEN\MAIN_0.ARK

      # 6) Build ISO with whatever
      - name: Build ISO
        run: |
          .\dependencies\windows\imgburn.exe /MODE BUILD /BUILDMODE IMAGEFILE /FILESYSTEM "ISO9660 + UDF" /UDFREV "1.02" /VOLUMELABEL "GH2_UNIFIED" /OVERWRITE YES /ROOTFOLDER NO /NOIMAGEDETAILS /SRC ".\out\ps2\" /DEST ".\out\gh2_u.iso" /START /CLOSE

      # 7) Run ps2master on the newly created ISO
      - name: Master the ISO (ps2master.exe) for 10s
        shell: pwsh
        run: |
          # Start ps2master in the background and capture the process object
          $process = Start-Process -FilePath .\dependencies\windows\ps2master.exe `
            -ArgumentList ".\out\gh2_u.iso" `
            -NoNewWindow `
            -PassThru

          # Wait 10 seconds
          Start-Sleep -Seconds 10

          # If the process is still alive, force kill it
          if (!$process.HasExited) {
            Stop-Process -Id $process.Id -Force
            Write-Host "Killed ps2master after 10 seconds, assuming success."
          } else {
            Write-Host "ps2master finished within 10 seconds."
          }

      # 8) Upload the final ISO artifact
      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: GH2_UNIFIED
          path: .\out\gh2_u.iso
